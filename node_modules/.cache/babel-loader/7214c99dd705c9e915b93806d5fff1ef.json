{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST } from \"./type\"; //Get post\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response && err.response.statusText,\n        status: err.response && err.response.status\n      }\n    });\n  }\n}; //Add likes\n\nexport const addLike = postID => async dispatch => {\n  try {\n    const res = await axios.put(`api/posts/like/${postID}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postID,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response && err.response.statusText,\n        status: err.response && err.response.status\n      }\n    });\n  }\n}; //Remove likes\n\nexport const removeLike = postID => async dispatch => {\n  try {\n    const res = await axios.put(`api/posts/unlike/${postID}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postID,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response && err.response.statusText,\n        status: err.response && err.response.status\n      }\n    });\n  }\n}; //Delete post\n\nexport const deletePost = postID => async dispatch => {\n  console.log(postID);\n\n  try {\n    const res = await axios.delete(`api/posts/${postID}`);\n    console.log(res.data);\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        postID\n      }\n    });\n    dispatch(setAlert('POST removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response && err.response.statusText,\n        status: err.response && err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/v.n.radhakrishnan/Social/DevConnection/client/src/action/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","postID","put","likes","removeLike","deletePost","console","log","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES,DELETE_POST } from \"./type\";\r\n\r\n//Get post\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"api/posts\");\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: err.response && err.response.statusText,\r\n        status: err.response && err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Add likes\r\nexport const addLike = (postID) => async (dispatch) => {\r\n    \r\n  try {\r\n    const res = await axios.put(`api/posts/like/${postID}`);\r\n   \r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postID, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: err.response && err.response.statusText,\r\n        status: err.response && err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Remove likes\r\nexport const removeLike = (postID) => async (dispatch) => {\r\n      \r\n  try {\r\n    const res = await axios.put(`api/posts/unlike/${postID}`);\r\n    \r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postID, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: err.response && err.response.statusText,\r\n        status: err.response && err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n\r\n//Delete post\r\nexport const deletePost = (postID) => async (dispatch) => {\r\n      console.log(postID);\r\n  try {\r\n    const res = await axios.delete(`api/posts/${postID}`);\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: { postID },\r\n    });\r\n    dispatch(setAlert('POST removed','success'))\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: err.response && err.response.statusText,\r\n        status: err.response && err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}