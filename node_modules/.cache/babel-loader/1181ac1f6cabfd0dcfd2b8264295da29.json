{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\v.n.radhakrishnan\\\\Social\\\\DevConnection\\\\client\\\\src\\\\componenets\\\\Post\\\\CommentChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentChart = ({\n  comments\n}) => {\n  _s();\n\n  const [datas, setData] = useState({});\n  useEffect(() => {\n    let grp = {};\n    comments.forEach(comment => {\n      console.log(\"s-\", comment);\n      const d = new Date(comment.date);\n      let temp = d.getFullYear().toString() + \"/\" + (d.getMonth() + 1).toString() + \"/\" + d.getDate().toString();\n      console.log(\"Date t-\", temp); // grp[temp]=1\n\n      console.log(\"grp-\", grp);\n\n      if (grp && grp[temp]) {\n        grp[temp] = grp[temp] + 1;\n        console.log(\"t-\", grp);\n      } else {\n        grp[temp] = 1;\n        console.log(\"f-\", grp);\n      }\n    });\n    console.log(\"key-\", Object.keys(grp));\n    console.log(\"val-\", Object.values(grp));\n    setData({\n      data: {\n        labels: Object.keys(grp),\n        datasets: [{\n          label: \"No of Comments\",\n          data: Object.values(grp),\n          backgroundColor: \"rgb(255, 99, 132)\",\n          borderColor: \"rgba(255, 99, 132, 0.2)\",\n          fill: false\n        }]\n      },\n      options: {\n        legend: {\n          display: true\n        }\n      }\n    });\n  }, [comments]);\n  return /*#__PURE__*/_jsxDEV(Line, { ...datas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CommentChart, \"tuPJsTpFjyj0ZjzDuc1YMCO8m3Y=\");\n\n_c = CommentChart;\nexport default CommentChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentChart\");","map":{"version":3,"sources":["C:/Users/v.n.radhakrishnan/Social/DevConnection/client/src/componenets/Post/CommentChart.js"],"names":["React","useState","useEffect","Line","CommentChart","comments","datas","setData","grp","forEach","comment","console","log","d","Date","date","temp","getFullYear","toString","getMonth","getDate","Object","keys","values","data","labels","datasets","label","backgroundColor","borderColor","fill","options","legend","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAErC,QAAM,CAACC,KAAD,EAAOC,OAAP,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAG,GAAG,EAAV;AAEAH,IAAAA,QAAQ,CAACI,OAAT,CAAkBC,OAAD,IAAa;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,OAAlB;AACA,YAAMG,CAAC,GAAG,IAAIC,IAAJ,CAASJ,OAAO,CAACK,IAAjB,CAAV;AACA,UAAIC,IAAI,GACNH,CAAC,CAACI,WAAF,GAAgBC,QAAhB,KACA,GADA,GAEA,CAACL,CAAC,CAACM,QAAF,KAAe,CAAhB,EAAmBD,QAAnB,EAFA,GAGA,GAHA,GAIAL,CAAC,CAACO,OAAF,GAAYF,QAAZ,EALF;AAOAP,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,IAAvB,EAV4B,CAW5B;;AAEAL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,GAApB;;AACA,UAAIA,GAAG,IAAIA,GAAG,CAACQ,IAAD,CAAd,EAAsB;AACpBR,QAAAA,GAAG,CAACQ,IAAD,CAAH,GAAYR,GAAG,CAACQ,IAAD,CAAH,GAAY,CAAxB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBJ,GAAlB;AACD,OAHD,MAGO;AACLA,QAAAA,GAAG,CAACQ,IAAD,CAAH,GAAY,CAAZ;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBJ,GAAlB;AACD;AACF,KArBD;AAsBAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,MAAM,CAACC,IAAP,CAAYd,GAAZ,CAApB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,MAAM,CAACE,MAAP,CAAcf,GAAd,CAApB;AACAD,IAAAA,OAAO,CAAC;AACNiB,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEJ,MAAM,CAACC,IAAP,CAAYd,GAAZ,CADJ;AAGJkB,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,gBADT;AAEEH,UAAAA,IAAI,EAAEH,MAAM,CAACE,MAAP,CAAcf,GAAd,CAFR;AAGEoB,UAAAA,eAAe,EAAE,mBAHnB;AAIEC,UAAAA,WAAW,EAAE,yBAJf;AAKEC,UAAAA,IAAI,EAAE;AALR,SADQ;AAHN,OADA;AAcNC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAAV;AAdH,KAAD,CAAP;AAgBD,GA3CQ,EA2CN,CAAC5B,QAAD,CA3CM,CAAT;AA+CI,sBAAO,QAAC,IAAD,OAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CArDD;;GAAMF,Y;;KAAAA,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\n\r\nconst CommentChart = ({comments}) => {\r\n\r\nconst [datas,setData]=useState({});\r\n\r\n\r\nuseEffect(() => {\r\n  let grp = {};\r\n\r\n  comments.forEach((comment) => {\r\n    console.log(\"s-\", comment);\r\n    const d = new Date(comment.date);\r\n    let temp =\r\n      d.getFullYear().toString() +\r\n      \"/\" +\r\n      (d.getMonth() + 1).toString() +\r\n      \"/\" +\r\n      d.getDate().toString();\r\n\r\n    console.log(\"Date t-\", temp);\r\n    // grp[temp]=1\r\n\r\n    console.log(\"grp-\", grp);\r\n    if (grp && grp[temp]) {\r\n      grp[temp] = grp[temp] + 1;\r\n      console.log(\"t-\", grp);\r\n    } else {\r\n      grp[temp] = 1;\r\n      console.log(\"f-\", grp);\r\n    }\r\n  });\r\n  console.log(\"key-\", Object.keys(grp));\r\n  console.log(\"val-\", Object.values(grp));\r\n  setData({\r\n    data: {\r\n      labels: Object.keys(grp),\r\n\r\n      datasets: [\r\n        {\r\n          label: \"No of Comments\",\r\n          data: Object.values(grp),\r\n          backgroundColor: \"rgb(255, 99, 132)\",\r\n          borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n          fill: false,\r\n        },\r\n      ],\r\n    },\r\n    options: { legend: { display: true } },\r\n  });\r\n}, [comments]);\r\n\r\n\r\n\r\n    return <Line {...datas} />;\r\n}\r\n\r\nexport default CommentChart\r\n"]},"metadata":{},"sourceType":"module"}