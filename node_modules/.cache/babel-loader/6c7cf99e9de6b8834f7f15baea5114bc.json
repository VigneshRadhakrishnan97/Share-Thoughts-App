{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from \"./type\";\nimport setAuthToken from \"../utils/setAuthToken\"; //get current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response && err.response.statusText,\n        status: err.response && err.response.status\n      }\n    });\n  }\n}; //create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify(formData);\n\n  try {\n    const res = await axios.post(\"api/profile\", body, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile updated\" : \"profile created\", \"success\"));\n    if (!edit) history.push(\"/dashboard\");\n  } catch (err) {\n    const error = err.response.data.errors;\n\n    if (error) {\n      error.forEach(e => {\n        dispatch(setAlert(e.msg, \"danger\", 3000));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response && err.response.statusText,\n        status: err.response && err.response.status\n      }\n    });\n  }\n}; //Add experience\n\nexport const addExperience = (formDate, history) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify(formData);\n\n  try {\n    const res = await axios.put(\"api/profile/experience\", body, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const error = err.response.data.errors;\n\n    if (error) {\n      error.forEach(e => {\n        dispatch(setAlert(e.msg, \"danger\", 3000));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response && err.response.statusText,\n        status: err.response && err.response.status\n      }\n    });\n  }\n}; //Add education\n\nexport const addEducation = (formDate, history) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify(formData);\n\n  try {\n    const res = await axios.put(\"api/profile/education\", body, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const error = err.response.data.errors;\n\n    if (error) {\n      error.forEach(e => {\n        dispatch(setAlert(e.msg, \"danger\", 3000));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response && err.response.statusText,\n        status: err.response && err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/v.n.radhakrishnan/Social/DevConnection/client/src/action/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","setAuthToken","getCurrentProfile","dispatch","localStorage","token","res","get","type","payload","data","err","console","log","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","body","JSON","stringify","post","push","error","errors","forEach","e","addExperience","formDate","put","addEducation"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from \"./type\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n//get current user profile\r\n\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\"api/profile/me\");\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response && err.response.statusText,\r\n        status: err.response && err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//create or update profile\r\n\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(formData);\r\n\r\n  try {\r\n    const res = await axios.post(\"api/profile\", body, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(edit ? \"Profile updated\" : \"profile created\", \"success\"));\r\n    if (!edit) history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const error = err.response.data.errors;\r\n\r\n    if (error) {\r\n      error.forEach((e) => {\r\n        dispatch(setAlert(e.msg, \"danger\", 3000));\r\n      });\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response && err.response.statusText,\r\n        status: err.response && err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Add experience\r\nexport const addExperience = (formDate, history) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(formData);\r\n\r\n  try {\r\n    const res = await axios.put(\"api/profile/experience\", body, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Experience added\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const error = err.response.data.errors;\r\n\r\n    if (error) {\r\n      error.forEach((e) => {\r\n        dispatch(setAlert(e.msg, \"danger\", 3000));\r\n      });\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response && err.response.statusText,\r\n        status: err.response && err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Add education\r\nexport const addEducation = (formDate, history) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(formData);\r\n\r\n  try {\r\n    const res = await axios.put(\"api/profile/education\", body, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Education added\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const error = err.response.data.errors;\r\n\r\n    if (error) {\r\n      error.forEach((e) => {\r\n        dispatch(setAlert(e.msg, \"danger\", 3000));\r\n      });\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response && err.response.statusText,\r\n        status: err.response && err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}