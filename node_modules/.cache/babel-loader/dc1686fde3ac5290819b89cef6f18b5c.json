{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\v.n.radhakrishnan\\\\Social\\\\DevConnection\\\\client\\\\src\\\\componenets\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/spinner';\nimport { getProfilebyID } from '../../action/profile';\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from \"./ProfileGithub\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  getProfilebyID,\n  auth,\n  profile: {\n    profile,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfilebyID(match.params.id);\n  }, [getProfilebyID]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        children: \"GO back to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), auth.isAuthendicated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.experience.map(exp => {\n              return /*#__PURE__*/_jsxDEV(ProfileExperience, {\n                experience: exp\n              }, exp._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 28\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No experiences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.education.map(edu => {\n              return /*#__PURE__*/_jsxDEV(ProfileEducation, {\n                education: edu\n              }, edu._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 28\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No educations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGithub, {\n          username: profile.githubusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\n\nconst mapStatetoProps = state => {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  getProfilebyID\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/v.n.radhakrishnan/Social/DevConnection/client/src/componenets/profile/Profile.js"],"names":["React","useEffect","Fragment","connect","Spinner","getProfilebyID","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Link","Profile","auth","profile","loading","match","params","id","isAuthendicated","user","_id","experience","length","map","exp","education","edu","githubusername","mapStatetoProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAqB,mBAArB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEP,EAAAA,cAAF;AAAiBQ,EAAAA,IAAjB;AAAsBC,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAASC,IAAAA;AAAT,GAA9B;AAAgDC,EAAAA;AAAhD,CAAD,KAA6D;AAAA;;AAC7Ef,EAAAA,SAAS,CAAC,MAAM;AAEdI,IAAAA,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAHQ,EAGN,CAACb,cAAD,CAHM,CAAT;AAKE,sBACE,QAAC,QAAD;AAAA,cACGS,OAAO,KAAK,IAAZ,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,QAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,IAAI,CAACM,eAAL,IACCN,IAAI,CAACE,OAAL,KAAiB,KADlB,IAECF,IAAI,CAACO,IAAL,CAAUC,GAAV,KAAkBP,OAAO,CAACM,IAAR,CAAaC,GAFhC,iBAGG,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAyB,QAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALN,eASE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEP;AAArB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGA,OAAO,CAACQ,UAAR,CAAmBC,MAAnB,GAA4B,CAA5B,gBACC,QAAC,QAAD;AAAA,sBACGT,OAAO,CAACQ,UAAR,CAAmBE,GAAnB,CAAwBC,GAAD,IAAS;AAC/B,kCAAO,QAAC,iBAAD;AAAiC,gBAAA,UAAU,EAAEA;AAA7C,iBAAwBA,GAAG,CAACJ,GAA5B;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA,kBADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAgBE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGP,OAAO,CAACY,SAAR,CAAkBH,MAAlB,GAA2B,CAA3B,gBACC,QAAC,QAAD;AAAA,sBACGT,OAAO,CAACY,SAAR,CAAkBF,GAAlB,CAAuBG,GAAD,IAAS;AAC9B,kCAAO,QAAC,gBAAD;AAAgC,gBAAA,SAAS,EAAEA;AAA3C,iBAAuBA,GAAG,CAACN,GAA3B;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA,kBADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,EA6BGP,OAAO,CAACc,cAAR,iBACC,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAEd,OAAO,CAACc;AAAjC;AAAA;AAAA;AAAA;AAAA,gBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CAzDD;;GAAMhB,O;;KAAAA,O;;AA2DN,MAAMiB,eAAe,GAAIC,KAAD,IAAS;AACjC,SAAM;AACFhB,IAAAA,OAAO,EAACgB,KAAK,CAAChB,OADZ;AAEFD,IAAAA,IAAI,EAACiB,KAAK,CAACjB;AAFT,GAAN;AAIC,CALD;;AAOA,eAAeV,OAAO,CAAC0B,eAAD,EAAmB;AAAExB,EAAAA;AAAF,CAAnB,CAAP,CAA8CO,OAA9C,CAAf","sourcesContent":["import React,{useEffect,Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from  '../layout/spinner'\r\nimport { getProfilebyID } from '../../action/profile'\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfileEducation from './ProfileEducation'\r\nimport ProfileGithub from \"./ProfileGithub\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Profile = ({ getProfilebyID,auth,profile:{profile,loading},match }) => {\r\nuseEffect(() => {\r\n    \r\n  getProfilebyID(match.params.id);\r\n}, [getProfilebyID]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\">GO back to Profiles</Link>\r\n          {auth.isAuthendicated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((exp) => {\r\n                    return <ProfileExperience key={exp._id} experience={exp} />;\r\n                  })}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experiences</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"profile-edu bg-white p-2\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((edu) => {\r\n                    return <ProfileEducation key={edu._id} education={edu} />;\r\n                  })}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No educations</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state)=>{\r\nreturn{ \r\n    profile:state.profile,\r\n    auth:state.auth\r\n}\r\n}\r\n\r\nexport default connect(mapStatetoProps,  { getProfilebyID })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}