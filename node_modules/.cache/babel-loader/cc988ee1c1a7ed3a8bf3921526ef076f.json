{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"./type\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from '../utils/setAuthToken'; //Load user\n\nexport const loaduser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (er) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //regester\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const error = err.response.data.errors;\n\n    if (error) {\n      error.forEach(e => {\n        dispatch(setAlert(e.msg, \"danger\", 3000));\n      });\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/v.n.radhakrishnan/Social/DevConnection/client/src/action/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAlert","setAuthToken","loaduser","dispatch","localStorage","token","res","get","type","payload","data","er","register","name","email","password","config","headers","body","JSON","stringify","post","err","error","response","errors","forEach","e","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAuDC,UAAvD,QAAyE,QAAzE;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAC,MAAI,MAAOC,QAAP,IAAkB;AACxC,MAAGC,YAAY,CAACC,KAAhB,EACA;AACIJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACH;;AACD,MAAI;AACA,UAAMC,GAAG,GAAC,MAAMX,KAAK,CAACY,GAAN,CAAU,UAAV,CAAhB;AACAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,WADC;AAEPW,MAAAA,OAAO,EAACH,GAAG,CAACI;AAFL,KAAD,CAAR;AAKH,GAPD,CAOE,OAAOC,EAAP,EAAW;AACRR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAIJ;AAEJ,CAnBM,C,CAqBP;;AACA,OAAO,MAAMa,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAOZ,QAAP,IAAoB;AACzE,QAAMa,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMT,GAAG,GAAG,MAAMX,KAAK,CAAC0B,IAAN,CAAW,WAAX,EAAwBH,IAAxB,EAA8BF,MAA9B,CAAlB;AACAb,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEZ,gBADC;AAEPa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOY,GAAP,EAAY;AACZ,UAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,CAAad,IAAb,CAAkBe,MAAhC;;AAEA,QAAIF,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACG,OAAN,CAAeC,CAAD,IAAO;AACnBxB,QAAAA,QAAQ,CAACH,QAAQ,CAAC2B,CAAC,CAACC,GAAH,EAAQ,QAAR,EAAkB,IAAlB,CAAT,CAAR;AACD,OAFD;AAGD;;AACDzB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAGD;AACF,CA1BM","sourcesContent":["import axios from \"axios\";\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"./type\";\r\nimport { setAlert } from \"./alert\";\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\n//Load user\r\nexport const loaduser=()=>async (dispatch)=>{\r\n    if(localStorage.token)\r\n    {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n        const res=await axios.get('api/auth');\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload:res.data\r\n        });\r\n        \r\n    } catch (er) {\r\n         dispatch({\r\n           type: AUTH_ERROR\r\n         });\r\n        \r\n    }\r\n\r\n}\r\n\r\n//regester\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"api/users\", body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const error = err.response.data.errors;\r\n\r\n    if (error) {\r\n      error.forEach((e) => {\r\n        dispatch(setAlert(e.msg, \"danger\", 3000));\r\n      });\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}