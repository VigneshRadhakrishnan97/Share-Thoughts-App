{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\v.n.radhakrishnan\\\\Social\\\\DevConnection\\\\client\\\\src\\\\componenets\\\\Post\\\\CommentChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentChart = ({\n  comments\n}) => {\n  _s();\n\n  const [datas, setData] = useState({});\n  useEffect(() => {\n    let grp = {};\n    comments.forEach(comment => {\n      const d = new Date(comment.date);\n      let temp = d.getFullYear().toString() + \"/\" + (d.getMonth() + 1).toString() + \"/\" + d.getDate().toString();\n\n      if (grp && grp[temp]) {\n        grp[temp] = grp[temp] + 1;\n      } else {\n        grp[temp] = 1;\n      }\n    });\n    setData({\n      data: {\n        labels: Object.keys(grp),\n        datasets: [{\n          label: \"No of Comments\",\n          data: Object.values(grp),\n          backgroundColor: \"rgb(255, 99, 132)\",\n          borderColor: \"rgba(255, 99, 132, 0.2)\",\n          fill: false\n        }]\n      },\n      options: {\n        legend: {\n          display: true\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, { ...datas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentChart, \"YHIjy0Rc4CLdEyvRGexM5uCWU6s=\");\n\n_c = CommentChart;\nexport default CommentChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentChart\");","map":{"version":3,"sources":["C:/Users/v.n.radhakrishnan/Social/DevConnection/client/src/componenets/Post/CommentChart.js"],"names":["React","useState","useEffect","Line","CommentChart","comments","datas","setData","grp","forEach","comment","d","Date","date","temp","getFullYear","toString","getMonth","getDate","data","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","fill","options","legend","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAG,GAAG,EAAV;AAEAH,IAAAA,QAAQ,CAACI,OAAT,CAAkBC,OAAD,IAAa;AAC5B,YAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAACG,IAAjB,CAAV;AACA,UAAIC,IAAI,GACNH,CAAC,CAACI,WAAF,GAAgBC,QAAhB,KACA,GADA,GAEA,CAACL,CAAC,CAACM,QAAF,KAAe,CAAhB,EAAmBD,QAAnB,EAFA,GAGA,GAHA,GAIAL,CAAC,CAACO,OAAF,GAAYF,QAAZ,EALF;;AAOA,UAAIR,GAAG,IAAIA,GAAG,CAACM,IAAD,CAAd,EAAsB;AACpBN,QAAAA,GAAG,CAACM,IAAD,CAAH,GAAYN,GAAG,CAACM,IAAD,CAAH,GAAY,CAAxB;AACD,OAFD,MAEO;AACLN,QAAAA,GAAG,CAACM,IAAD,CAAH,GAAY,CAAZ;AACD;AACF,KAdD;AAgBAP,IAAAA,OAAO,CAAC;AACNY,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEC,MAAM,CAACC,IAAP,CAAYd,GAAZ,CADJ;AAGJe,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,gBADT;AAEEL,UAAAA,IAAI,EAAEE,MAAM,CAACI,MAAP,CAAcjB,GAAd,CAFR;AAGEkB,UAAAA,eAAe,EAAE,mBAHnB;AAIEC,UAAAA,WAAW,EAAE,yBAJf;AAKEC,UAAAA,IAAI,EAAE;AALR,SADQ;AAHN,OADA;AAcNC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAAV;AAdH,KAAD,CAAP;AAgBD,GAnCQ,EAmCN,EAnCM,CAAT;AAqCA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,IAAD,OAAUzB;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7CD;;GAAMF,Y;;KAAAA,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst CommentChart = ({ comments }) => {\r\n  const [datas, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    let grp = {};\r\n\r\n    comments.forEach((comment) => {\r\n      const d = new Date(comment.date);\r\n      let temp =\r\n        d.getFullYear().toString() +\r\n        \"/\" +\r\n        (d.getMonth() + 1).toString() +\r\n        \"/\" +\r\n        d.getDate().toString();\r\n\r\n      if (grp && grp[temp]) {\r\n        grp[temp] = grp[temp] + 1;\r\n      } else {\r\n        grp[temp] = 1;\r\n      }\r\n    });\r\n\r\n    setData({\r\n      data: {\r\n        labels: Object.keys(grp),\r\n\r\n        datasets: [\r\n          {\r\n            label: \"No of Comments\",\r\n            data: Object.values(grp),\r\n            backgroundColor: \"rgb(255, 99, 132)\",\r\n            borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            fill: false,\r\n          },\r\n        ],\r\n      },\r\n      options: { legend: { display: true } },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Line {...datas} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CommentChart;\r\n"]},"metadata":{},"sourceType":"module"}